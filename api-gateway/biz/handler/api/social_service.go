// Code generated by hertz generator.

package api

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	social "github.com/ozline/tiktok/api-gateway/biz/model/message/social"
)

// RelationAction .
// @router /v1/douyin/relation/action [POST]
func RelationAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req social.RelationActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(social.RelationActionResponse)

	c.JSON(consts.StatusOK, resp)
}

// RelationFollowList .
// @router /v1/douyin/relation/follow/list [GET]
func RelationFollowList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req social.RelationFollowListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(social.RelationFollowListResponse)

	c.JSON(consts.StatusOK, resp)
}

// RelationFollowerList .
// @router /v1/douyin/relation/follower/list [GET]
func RelationFollowerList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req social.RelationFollowListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(social.RelationFollowListResponse)

	c.JSON(consts.StatusOK, resp)
}

// RleationFriendList .
// @router /v1/douyin/relation/friend/list [GET]
func RleationFriendList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req social.RelationFriendListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(social.RelationFriendListResponse)

	c.JSON(consts.StatusOK, resp)
}
